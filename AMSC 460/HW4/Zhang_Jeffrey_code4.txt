import math
import numpy as np
from sympy import *
from scipy.integrate import quad
import scipy.special as special
from sympy.plotting import plot

def f(x):
    return math.exp(x) - math.exp(-2*x)

def variable_summation_ak(difference_x, m, a, k):
    variable = 0
    x_i = a
    for i in range(2*m):
        variable += f(x_i)*math.cos(k*x_i)
        x_i += difference_x
    return variable/m

def variable_summation_bk(difference_x, m, a, k):
    variable = 0
    x_i = a
    for i in range(2*m):
        variable += f(x_i)*math.sin(k*x_i)
        x_i += difference_x
    return variable/m

def S_n(n,m,a,b):
    difference_x = float((b-a)/(2*m))
    a_0 = variable_summation_ak(difference_x, m, a, 0) 
    a_n = variable_summation_ak(difference_x, m, a, n) 
    x = symbols('x')
    S_n = (a_0/2) + a_n*cos(n*x)
    for k in range(1,n):
        a_k = variable_summation_ak(difference_x, m, a, k) 
        b_k = variable_summation_bk(difference_x, m, a, k) 
        S_n += a_k*cos(k*x) + b_k*sin(k*x)
    return S_n

def print_to_compare(Sn):
    x = symbols('x')
    p1 = plot(Sn, (x,-3,3))
    p2 = plot(exp(x) - exp(-2*x),(x,-3,3))