import math
import numpy as np
from sympy import *
from scipy.integrate import quad
import scipy.special as special
from sympy.plotting import plot

def f(x):
    return math.cos(x)/math.pow(x,1/3)

def f2(x):
    return (6*x*math.sin(x) + (4-9*x**2)*math.cos(x))/(9*math.pow(x,7/3))

def Composite_Trapezoidal_Rule(n,a,b):
    h = (b-a)/n
    summation = 0
    for j in range(1,n):
        summation += f(a + j*h)
    return (h/2)*(f(a) + 2*summation + f(b))
    
def g(t):
    return (3/2)*math.cos(t**(3/2))

def Composite_Trapezoidal_Rule_t(n,a,b):
    h = (b-a)/n
    summation = 0
    for j in range(1,n):
        summation += g(a + j*h)
    return (h/2)*(g(a) + 2*summation + g(b))